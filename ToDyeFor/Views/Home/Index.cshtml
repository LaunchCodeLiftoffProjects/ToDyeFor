@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <h1 class="display-4">Magic your colorful solution below</h1>
    <div id="calculator">

        <form id="calculator" asp-controller="?" asp-action="ProcessCalculation" method="post">
            <div class="tab">
                <p>
                    <label for="fabric">Choose Fabric: </label>
                    <select id="fabric">
                        <option value="optionone">One</option>
                        <option value="optiontwo">Two</option>
                        <option value="optionthree">Three</option>
                        <option value="optionfour">Four</option>
                    </select>
                </p>
            </div>

            <div class="tab">
                <p>
                    <label for="dye">Choose Dye: </label>
                    <select id="dye">
                        <option value="optionone">One</option>
                        <option value="optiontwo">Two</option>
                        <option value="optionthree">Three</option>
                        <option value="optionfour">Four</option>
                    </select>
                </p>
            </div>
            <div class="tab">
                <p>
                    <label for="quantity">Amount of Fabric (in yards or weight): </label>
                    <select id="unitofmeasurement">
                        <option value="yards">Yards</option>
                        <option value="weight">Grams?</option>
                    </select>
                </p>
                <p>
                    <div class="slidecontainer">
                        <input type="range" min="0" max="100" value="50" class="slider" id="quantityRange">
                        <br>Value: <span id="demo"></span>yards/weight@*makethiswhicheverwasclicked*@
                    </div>
                </p>
            </div>
            <div class="tab">
                <p>
                    Depth of Shade:
                    <div class="slidecontainer">
                        <input type="range" min="0" max="100" value="50" class="slider" id="depthRange">
                        <br>Value: <span id="demo"></span>%
                    </div>
                </p>
            </div>
            <div style="overflow:auto;">
                <div style="float:right;">
                    <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
                </div>
            </div>

            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align:center;margin-top:40px;">
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
                <span class="step"></span>
            </div>
        </form>

    </div>
    <script>
        var currentTab = 0; // Current tab is set to be the first tab (0)
        showTab(currentTab); // Display the current tab

        function showTab(n) {
            // This function will display the specified tab of the form ...
            var x = document.getElementsByClassName("tab");
            x[n].style.display = "block";
            // ... and fix the Previous/Next buttons:
            if (n == 0) {
                document.getElementById("prevBtn").style.display = "none";
            } else {
                document.getElementById("prevBtn").style.display = "inline";
            }
            if (n == (x.length - 1)) {
                document.getElementById("nextBtn").innerHTML = "Submit";
            } else {
                document.getElementById("nextBtn").innerHTML = "Next";
            }
            // ... and run a function that displays the correct step indicator:
            fixStepIndicator(n)
        }

        function nextPrev(n) {
            // This function will figure out which tab to display
            var x = document.getElementsByClassName("tab");
            // Exit the function if any field in the current tab is invalid:
            if (n == 1 && !validateForm()) return false;
            // Hide the current tab:
            x[currentTab].style.display = "none";
            // Increase or decrease the current tab by 1:
            currentTab = currentTab + n;
            // if you have reached the end of the form... :
            if (currentTab >= x.length) {
                //...the form gets submitted:
                document.getElementById("calculator").submit();
                return false;
            }
            // Otherwise, display the correct tab:
            showTab(currentTab);
        }

        function validateForm() {
            // This function deals with validation of the form fields
            var x, y, i, valid = true;
            x = document.getElementsByClassName("tab");
            y = x[currentTab].getElementsByTagName("input");
            // A loop that checks every input field in the current tab:
            for (i = 0; i < y.length; i++) {
                // If a field is empty...
                if (y[i].value == "") {
                    // add an "invalid" class to the field:
                    y[i].className += " invalid";
                    // and set the current valid status to false:
                    valid = false;
                }
            }
            // If the valid status is true, mark the step as finished and valid:
            if (valid) {
                document.getElementsByClassName("step")[currentTab].className += " finish";
            }
            return valid; // return the valid status
        }

        function fixStepIndicator(n) {
            // This function removes the "active" class of all steps...
            var i, x = document.getElementsByClassName("step");
            for (i = 0; i < x.length; i++) {
                x[i].className = x[i].className.replace(" active", "");
            }
            //... and adds the "active" class to the current step:
            x[n].className += " active";
        }
    </script>
</div>
